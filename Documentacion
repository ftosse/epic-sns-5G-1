Un m ́odulo en Python es un archivo de texto que contiene funciones, variables y/o definiciones [1] que puede ser reutilizado (importado) en un espacio de nombre independiente al script principal donde se reutiliza, gracias a la estructura de paquetes de
Python. Un paquete es una colecci ́on de m ́odulos [2] que se estructura de manera que se puede acceder al m ́odulo mediante un punto seg ́un
la jerarqu ́ıa definida del paquete (i.e., Paquete.modulo A, Paquete.modulo B). 
Python dispone de paquetes o m ́odulos est ́andar que tambi ́en se conocen como librer ́ıas, que permiten extender las capacidades del lenguaje Python y que no son accesibles por defecto sino que se instalan v ́ıa in- ternet mediante un gestor de paquetes llamado Pip. Un claro ejemplo es la computaci ́on matricial
con la librer ́ıa Numpy o procesamiento gr ́afico Matplotlib . En vista que se trata de c ́odigo abierto,
para alcanzar las potencialidades de un entorno de desarrollo como Matlab , no es suficiente con las librer ́ıas por defecto, entonces es necesario un conjunto de librer ́ıas que permitan un desarrollo
flexible y ajustado a las necesidades de lo que se plantea programar, a un costo m ́ınimo de dinero,
al no requerir licencia, y a un tiempo de instalaci ́on reducido, que se instala en 15 minutos o menos
seg ́un la velocidad de internet y que no supera en espacio 200 MB.
Para lograr lo anterior es necesario dos cosas, un entorno virtual que soporte las librer ́ıas y el
conjunto de librer ́ıas. Un entorno virtual es un entorno de ejecuci ́on aislado Python que permite
la instalaci ́on y ejecuci ́on de aplicaciones Python sin interferir con versiones o distribuciones de
aplicaciones Python que se ejecutan en el mismo sistema[3][4]. Con un entorno virtual es posible
instalar en una misma m ́aquina diferentes versiones de un mismo paquete sin que una versi ́on
afecte el comportamiento del otra, debido a que cada entorno tambi ́en es independiente de otro y
del mismo sistema. Bajo un entorno virtual y teniendo en cuenta el objetivo del trabajo de grado,
son necesarias las librer ́ıas primarias Nympy para c ́alculos num ́ericos, Matplotlib para la generaci ́on degr ́aficas, Pandas para el manejo de archivos de informaci ́on, Kivy para el desarrollo de la interfaz
gr ́afica (aunque est ́a en evaluaci ́on otras alternativas) y scipy para c ́alculos num ́ericos avanzados.
Teniendo en cuenta lo anterior se desarrollaron las siguientes actividades

Un módulo es un archivo de texto que contiene funciones, variables y/o definiciones [1] que pueden reutilizarse en un procedimiento denominado  import (impotar, import), que eleva los elementos mencionados al mismo espacio de nombre en el cual ha sido invocado. Ambos espacios son independientes, puesto que para diferenciar cada espacio es necesario especificar el archivo de texto fuente.
Un paquete es una colección de módulos [2] organizados en la jerarquia de directorios, de este modo, para acceder a un módulo es necesario identificar primero el paquete donde se encuentra ubicado y posteriormente el módulo, así: Paquete1.modulo_A.py, Paquete2.moduloB.py, etc.

Python dispone de módulos estándar en las cuales una serie de definiciones conforman una librería. Si bien un módulo y una librería son conceptos que usualmente se intercambian en la practica, necesariamente no son lo mismo, dado que en un módulo es posible implementar distintas librerías. Las librerías 

De la misma manera que es posible definir modulos
Una librería es una definición disponible en un módulo.

El sistema de archivos denominada Jerarquia de directorios.


