
\section{REQUERIMIENTOS DE ALTO NIVEL, PROGRESO WBS}

En las siguientes secciones se definen nuevos requisitos funcionales de alto nivel relacionados a los requisitos previamente establecidos, con el fin de trazar una ruta clara que permita definir el árbol de tareas y paquetes de trabajo WBS. Es necesario aclarar que algunos aspectos ya han sido implementados en cierto nivel de complejidad, ya sea una prueba de concepto aislada (con números de prueba, como es el caso de los modelos de canal (abg, ci, etsi) o con una simulación de un sistema de celdas (con usuarios simulados, en este caso hasta el momentos se han hecho pruebas para una sola celda con un conjunto de usuarios para calcular las pérdidas de espacio libre).

 Estos requerimientos son definidos de esta manera, pues desde el anteproyecto se ha definido trabajar con una estructura \textbf{WBS}, donde los requerimientos complejos se fragmentan en tareas y subtareas de menor complejidad, y a su vez, estas tambien son fragmentadas.

También es necesario aclarar que algunos requerimientos pueden ser agrupados en otros. Esta actividad no será realizada sino hasta la definición de los paquetes de trabajo WBS, pues al momento se desea conocer el diseño del simulador y luego organizarlo en forma de WBS; sin embargo, algunos requerimientos han sido reorganizados pues tienen mayor sentido dentro de otros.


\subsection{Definiciones Iniciales}
\begin{itemize}
    \item Como se ha comentado en reportes anteriores, se ha seleccionado \textbf{Kivy} como \textit{marco de trabajo} para el desarrollo de la GUI; el marco de trabajo consiste en dos elementos fundamentales: lógica en lenguaje python (controla las vistas y relaciona otros módulos) y vistas en lenguaje kv (que definen las vistas gráficas estrictamente). De modo que ambos elementos están aislados en código, pero el marco de trabajo los conecta internamente. Para referirse a la lógica de la GUI sin confundirla con la lógica del simulador, pues son lógicas diferentes, la \textbf{lógica de la GUI en adelante será denominada como} \textit{\textbf{Backend}}.
\end{itemize}


\subsection{Requerimientos de Alto Nivel, del USUARIO FINAL}
A continuación los requerimientos finales. Estos no serán considerados en el diseño por ahora, pues son los requerimientos que se esperan obtener al final de cada simulación (excepto el tercero). Los siguientes requerimientos se alcanzan mediante los requerimientos del simulador.
\begin{itemize}
    \item  \textbf{El usuario final} \textit{podrá} \textbf{obtener}  la gráfica \textit{CDF} y \textit{PDF} que refleja el resultado del cálculo del porcentaje de degradación de un escenario UMa y UMi de la red 5G.  
    \item \textbf{El usuario final} \textit{podrá} \textbf{obtener} una gráfica \textit{CDF} y \textit{PDF} que refleja el resultado del cálculo de \textit{throughput} para un usuario, una celda y el conjunto de celdas, de un escenario (por definir) de la red 5G.
    \item \sout{\textbf{El usuario final} \textit{podrá}  implementar diversas entidades y relaciones de un escenario de la red 5G mediante una aproximación de Programación Orientada a Objetos.} No es un requerimiento funcional, en cambio \textit{es un requerimiento no funcional}.
\end{itemize}

\subsection{Descomposición de Requerimientos de Alto Nivel, del SIMULADOR}
%entenderse como caracteristicas del simulador.
\begin{itemize}
%Aqui no se hace diferencia entre simulador y modelo del sistema, esto se hace más adelante.
    %\item \textbf{El simulador} \textit{permitirá} 
     
    \item \textbf{El simulador} \textit{permitirá} implementar como mínimo 2 \textit{escenario} de la red 5G, y como mínimo \textit{UMa} y \textit{UMi}.
    \begin{itemize}
        \item El simulador permitirá implementar como mínimo 2 modelos de perdidas en el escenario UMi y como mínimo el \textit{modelo ABG-Rappaport} y \textit{modelo Ci}.
        
        \item El simulador permitirá implementar como mínimo 1 modelo de perdida en el escenario UMa y como mínimo el modelo \textit{Tr. 38901-ETSI}.
        \item El simulador permitirá implementar los modelos de pérdidas en las frecuencias 28 y 73 GHz, según las consideraciones de cada modelo de pérdidas.
    \end{itemize}
    
    \item \textbf{El simulador} \textit{permitirá} implementar como  mínimo 1 \textit{caso de uso} (mMTC, emBB, URLLC) de la red 5G, y como mínimo \textbf{eMBB} (sin considerar efectos de movilidad).
    
        \begin{itemize}
            \item El simulador permitirá implementar acceso a banda ancha en áreas de diferente densidad de usuarios (200-150000 usuarios por kilometro cuadrado). \textbf{Pruebas de complejidad son necesarias en fase de pruebas: ¿Cual es el máximo de usuarios que puede simularse en un tiempo adecuado y sin desestabilizar el simulador?}
            \begin{itemize}
                
                \item El simulador permitirá implementar un procedimiento para cuantificar la relación entre usuarios y área total del sistema, para definir la densidad de usuario en un área determinada.
                \item El simulador permitirá implementar un procedimiento para generar las coordenadas espaciales de los usuarios, en diferentes patrones de densidad y de forma aleatoria.
                    \begin{itemize}
                        \item El simulador permitirá implementar el proceso puntual \textit{poisson}.
                        \item El simulador permitirá implementar el proceso puntual \textit{thomas-cluster}.
                    \end{itemize}
            \end{itemize}
            
            \item El simulador permitirá implementar acceso a banda ancha para alcanzar densidad de tráfico correspondiente a la densidad de usuarios, y en el enlace de bajada.
    %------>
            \cite{}.%https://www.qualcomm.com/media/documents/files/heavy-reading-whitepaper-exploring-5g-new-radio-use-cases-capabilities-timeline.pdf
                \begin{itemize}
                    \item El simulador permitirá implementar diversos algoritmos de planificación radio, y como mínimo \textit{Round Robin}.
                \end{itemize}

        \end{itemize}
    
    \item \sout{\textbf{El simulador} \textit{permitirá} implementar un \textit{modelo de sistema basado en ondas}}
    \sout{milimétricas y como mínimo en en la banda 28 y 73 GHz.}
    
    \item \sout{\textbf{El simulador} \textit{permitirá} implementar diversos \textit{algoritmos de planificación} radio, y como mínimo \textit{Round Robin}.}
    
    
    %flujos
     
     
     
    %\item \textbf{El sistema} \textit{permitirá} implementar algoritmos de movilidad básicos a partir de fundamentos programación orientada a objetos.
  
    %\item  \textbf{El simulador} \textit{permitirá} generar las coordenadas patrones ideales de celdas hexagonales, de forma dinámica y a partir de una serie de algoritmos.%a partir de coordenadas axiales  de forma automática y hasta un máximo de 19 celdas.
\end{itemize}

\subsection{Descomposición de Requerimientos de Alto Nivel, de la INTERFAZ GRÁFICA (GUI)}

\begin{itemize}

    \item \textbf{La GUI} \textit{permitirá} controlar el \textit{flujo de la simulación}, es decir: iniciar \sout{, pausar}  y terminar, el flujo de simulación. %\st{pausar aplica  a entre eventos de simulación y terminar antes de finalizar la simulación, aplica entre eventos de simulación }. %antes de comenzar un evento. flujo=sum(eventos)

        \begin{itemize}
            \item \textbf{El backend} permitirá implementar un procedimiento para iniciar la simulación, mediante un protocolo de comunicación con el simulador, que permita ejecutar las diferentes fases de simulación de los módulos python. \textbf{Genera Logs}.
            \item \textbf{El backend} permitirá implementar un procedimiento para el manejo de excepciones software que permita terminar el programa sin errores. \textbf{Genera Logs}. \textit{Si este procedimiento no es implementado, al terminar una simulación,  la GUI cierra y toda operación se detiene, por lo que es necesario abrir nuevamente el programa. Con excepciones, el programa puede continuar abierto y puede iniciarse una nueva simulación sin abrir nuevamente el programa}.
        \end{itemize}    
    \item \textbf{La GUI} \textit{permitirá} escribir en \textit{campos de texto} el valor numérico de los parámetros de una simulación,  mediante la entrada por teclado.
    
    \begin{itemize}
    
        \item \textbf{El backend} \textit{permitirá} implementar un protocolo de comunicación con la GUI, que permita obtener los parámetros iniciales de simulación.
        
        \item \textbf{El backend} \textit{permitirá} implementar un procedimiento para validar si los valores numéricos están en los rangos de operación del simulador.
    \end{itemize}
    
    \item \textbf{La GUI} \textit{permitirá} definir la características de una simulación, mediante opciones desplegables predefinidas.
    
    \begin{itemize}
        \item \textbf{El backend} \textit{permitirá} implementar un protocolo de comunicación con la GUI, que le permita a esta desplegar los parámetros iniciales de simulación predefinidos, a través de un archivo de texto jason.
    \end{itemize}
    
    \item \textbf{La GUI} \textit{permitirá} almacenar los resultados de los eventos de simulación, en diferentes formatos de texto.
    \begin{itemize}
        \item El simulador permitirá implementar rutinas estándar para almacenar datos de simulación en formato txt.
        \item El simulador permitirá implementar rutinas estándar para almacenar datos de simulación en formato jason para comunicar la interfaz gráfica con el simulador.
    \end{itemize}
    %\item \textbf{La GUI} \textit{permitirá} definir textualmente, la ruta. LA RUTA NO SE CAMBIA POR QUE PARA ESO EXISTE LA BASE DE DATOS.
    \item \textbf{La GUI} \textit{permitirá} definir en un campo de texto el nombre de la simulación, para diferenciar diferentes simulaciones o una opción por defecto.
        \begin{itemize}
            \item \textit{Custom}. El simulador permitirá implementar una procedimiento para crear una estructura de carpetas dentro de la carpeta \textit{base de datos} donde los archivos serán almacenados en cada simulación, con el nombre de simulación de preferencia.
            \item \textit{Por defecto}. El simulador permitirá implementar una procedimiento para crear una estructura de carpetas dentro de la carpeta \textit{base de datos} donde los archivos serán almacenados en cada simulación, con un nombre diferente: \textit{simulacion0, simulacion1, simulacion2, simulacion3}.
        \end{itemize}
    
    \item \textbf{La GUI} \textit{permitirá} cargar los resultados de los eventos de simulación, para generar una nueva simulación.
    \begin{itemize}
        \item El simulador permitirá implementar una procedimiento para enlazar los datos de un evento de simulación con un evento de simulación posterior, de tal manera que pueda continuarse con una simulación sin reiniciar el proceso con datos diferentes. \textit{Por ejemplos las coordenadas de los usuarios.} 
    \end{itemize}

    \item \sout{\textbf{La GUI} \textit{permitirá} definir (si o no) que \textit{data} de los eventos de simulación será almacenado.} \textit{Opcional}.
    
    \item \textbf{La GUI} \textit{permitirá} informar textualmente el estado de la simulación en un campo específico para ese propósito.
        \begin{itemize}
            
            \item El simulador \textit{permitirá} registrar la traza del flujo de simulación (logs) en formato jason, con cada uno de los eventos de simulación y errores (si aplica).
            \item El simulador permitirá implementar un procedimiento de comunicación entre los archivos jason logs y la GUI, para informar al usuario final el flujo y errores.
        \end{itemize}
    
    \item \sout{\textbf{La GUI} \textit{permitirá} almacenar la traza del flujo de simulación (logs) en formato txt, con cada uno de los eventos de simulación y errores (si aplica).}
    
\end{itemize}

\section{RELACIÓN REQUERIMIENTOS, DIAGRAMA DE FLUJO Y DIAGRAMA DE CLASES}
A continuación se describe como se relacionan los requerimientos funcionales, el diagrama de flujo y el diagrama de clase que se han desarrollado hasta el momento. 
